name: CI-CD Pipeline

on:
  push:
    branches:
      - main
      - testing

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKERHUB_REPO_BACKEND: sarveshsd/go-fullstack-backend
  DOCKERHUB_REPO_FRONTEND: sarveshsd/react-fullstack-frontend
  K8S_NAMESPACE: default
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: sarvesh-eks

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_PASSWORD }}

    - name: Set image tag as Git SHA
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Build & push backend Docker image
      run: |
        docker build -t $DOCKERHUB_REPO_BACKEND:${{ env.IMAGE_TAG }} ./app/backend
        docker push $DOCKERHUB_REPO_BACKEND:${{ env.IMAGE_TAG }}

    - name: Build & push frontend Docker image
      run: |
        docker build -t $DOCKERHUB_REPO_FRONTEND:${{ env.IMAGE_TAG }} ./app/frontend
        docker push $DOCKERHUB_REPO_FRONTEND:${{ env.IMAGE_TAG }}
    
    - name: Deploy PV and PVC
      run: |
        kubectl apply -f deployment/pv.yml -n $K8S_NAMESPACE
        kubectl apply -f deployment/pvc.yml -n $K8S_NAMESPACE

    - name: Deploy Postgres
      run: |
        kubectl apply -f deployment/postgres-deployment.yml -n $K8S_NAMESPACE

    - name: Update backend deployment image
      run: |
        kubectl set image deployment/backend backend=$DOCKERHUB_REPO_BACKEND:${{ env.IMAGE_TAG }} -n $K8S_NAMESPACE

    - name: Update frontend deployment image
      run: |
        kubectl set image deployment/frontend frontend=$DOCKERHUB_REPO_FRONTEND:${{ env.IMAGE_TAG }} -n $K8S_NAMESPACE

    - name: svc
      run: |
        kubectl get svc